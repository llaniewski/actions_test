name: C/C++ CI

on: [push]

jobs:
  install:
    runs-on: ubuntu-latest
    outputs:
      ovhash: ${{ steps.ovstop.outputs.hash }}
      ovpath: ${{ steps.ovstop.outputs.path }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v3
    - name: start
      shell: bash
      run: ./ov.root install && ov.root start
    - name: install
      shell: ov.bash {0}
      run: |
        ./install.sh --sudo --group r
         ./install.sh --sudo --group rdep
         ./install.sh --sudo --group openmpi
         ./install.sh --sudo --group cuda 11.7
         CUDA_PATH=/usr/local/cuda-11.7
         echo "export PATH=\"$CUDA_PATH/bin:\$PATH\"" >> ~/.myenv
         echo "export LD_LIBRARY_PATH=\"$CUDA_PATH/lib64:\$LD_LIBRARY_PATH\"" >> ~/.myenv
         cat ~/.myenv
         source ~/.myenv
         nvcc --version
    - name: stop
      shell: bash
      id: ovstop
      run: |
        ov.root stop
        export OV=$(ov.root path)
        # echo "path=$OV" >>$GITHUB_OUTPUT
        sudo tar czf diff.tgz -C $OV/ .
        ls -lh diff.tgz
        echo "path=diff.tgz" >>$GITHUB_OUTPUT
        echo "hash=$(sha256sum diff.tgz)" >>$GITHUB_OUTPUT
    - uses: actions/cache/save@v3
      with:
        path: ${{ steps.ovstop.outputs.path }}
        key: ${{ steps.ovstop.outputs.hash }}
  build:
    runs-on: ubuntu-latest
    needs: install
    steps:
    - name: Git checkout
      uses: actions/checkout@v3
    - uses: actions/cache/restore@v3
      with:
        path: ${{ needs.install.outputs.ovpath }}
        key: ${{ needs.install.outputs.ovhash }}
    - name: start
      shell: bash
      run: |
        ./ov.root install
        export OV=$(ov.root path)
        mkdir -p $OV/
        sudo tar xzf --same-permissions --same-owner diff.tgz -C $OV/
        ov.root start
    - shell: ov.bash {0}
      run: |
        source ~/.myenv
        R -e 'print(1:10)'
        nvcc --version
    - name: stop
      shell: bash
      run: ov.root stop
      